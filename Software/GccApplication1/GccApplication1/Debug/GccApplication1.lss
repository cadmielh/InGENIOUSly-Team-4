
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  000009d2  00000a66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000272  00800102  00800102  00000a68  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a68  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cb2  00000000  00000000  00000be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000557  00000000  00000000  0000189a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000926  00000000  00000000  00001df1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000022c  00000000  00000000  00002718  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000042d  00000000  00000000  00002944  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003fc  00000000  00000000  00002d71  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  0000316d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	86 c0       	rjmp	.+268    	; 0x10e <__ctors_end>
   2:	00 00       	nop
   4:	0e c1       	rjmp	.+540    	; 0x222 <__vector_1>
   6:	00 00       	nop
   8:	28 c1       	rjmp	.+592    	; 0x25a <__vector_2>
   a:	00 00       	nop
   c:	9d c0       	rjmp	.+314    	; 0x148 <__bad_interrupt>
   e:	00 00       	nop
  10:	9b c0       	rjmp	.+310    	; 0x148 <__bad_interrupt>
  12:	00 00       	nop
  14:	99 c0       	rjmp	.+306    	; 0x148 <__bad_interrupt>
  16:	00 00       	nop
  18:	97 c0       	rjmp	.+302    	; 0x148 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	95 c0       	rjmp	.+298    	; 0x148 <__bad_interrupt>
  1e:	00 00       	nop
  20:	93 c0       	rjmp	.+294    	; 0x148 <__bad_interrupt>
  22:	00 00       	nop
  24:	91 c0       	rjmp	.+290    	; 0x148 <__bad_interrupt>
  26:	00 00       	nop
  28:	8f c0       	rjmp	.+286    	; 0x148 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	8d c0       	rjmp	.+282    	; 0x148 <__bad_interrupt>
  2e:	00 00       	nop
  30:	8b c0       	rjmp	.+278    	; 0x148 <__bad_interrupt>
  32:	00 00       	nop
  34:	89 c0       	rjmp	.+274    	; 0x148 <__bad_interrupt>
  36:	00 00       	nop
  38:	87 c0       	rjmp	.+270    	; 0x148 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	85 c0       	rjmp	.+266    	; 0x148 <__bad_interrupt>
  3e:	00 00       	nop
  40:	83 c0       	rjmp	.+262    	; 0x148 <__bad_interrupt>
  42:	00 00       	nop
  44:	81 c0       	rjmp	.+258    	; 0x148 <__bad_interrupt>
  46:	00 00       	nop
  48:	7f c0       	rjmp	.+254    	; 0x148 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	7d c0       	rjmp	.+250    	; 0x148 <__bad_interrupt>
  4e:	00 00       	nop
  50:	7b c0       	rjmp	.+246    	; 0x148 <__bad_interrupt>
  52:	00 00       	nop
  54:	79 c0       	rjmp	.+242    	; 0x148 <__bad_interrupt>
  56:	00 00       	nop
  58:	77 c0       	rjmp	.+238    	; 0x148 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	75 c0       	rjmp	.+234    	; 0x148 <__bad_interrupt>
  5e:	00 00       	nop
  60:	73 c0       	rjmp	.+230    	; 0x148 <__bad_interrupt>
  62:	00 00       	nop
  64:	71 c0       	rjmp	.+226    	; 0x148 <__bad_interrupt>
  66:	00 00       	nop
  68:	6f c0       	rjmp	.+222    	; 0x148 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	6d c0       	rjmp	.+218    	; 0x148 <__bad_interrupt>
  6e:	00 00       	nop
  70:	6b c0       	rjmp	.+214    	; 0x148 <__bad_interrupt>
  72:	00 00       	nop
  74:	69 c0       	rjmp	.+210    	; 0x148 <__bad_interrupt>
  76:	00 00       	nop
  78:	67 c0       	rjmp	.+206    	; 0x148 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	65 c0       	rjmp	.+202    	; 0x148 <__bad_interrupt>
  7e:	00 00       	nop
  80:	25 c1       	rjmp	.+586    	; 0x2cc <__vector_32>
  82:	00 00       	nop
  84:	61 c0       	rjmp	.+194    	; 0x148 <__bad_interrupt>
  86:	00 00       	nop
  88:	5f c0       	rjmp	.+190    	; 0x148 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	07 63       	ori	r16, 0x37	; 55
  8e:	42 36       	cpi	r20, 0x62	; 98
  90:	b7 9b       	sbis	0x16, 7	; 22
  92:	d8 a7       	std	Y+40, r29	; 0x28
  94:	1a 39       	cpi	r17, 0x9A	; 154
  96:	68 56       	subi	r22, 0x68	; 104
  98:	18 ae       	std	Y+56, r1	; 0x38
  9a:	ba ab       	std	Y+50, r27	; 0x32
  9c:	55 8c       	ldd	r5, Z+29	; 0x1d
  9e:	1d 3c       	cpi	r17, 0xCD	; 205
  a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
  a2:	57 63       	ori	r21, 0x37	; 55
  a4:	bd 6d       	ori	r27, 0xDD	; 221
  a6:	ed fd       	.word	0xfded	; ????
  a8:	75 3e       	cpi	r23, 0xE5	; 229
  aa:	f6 17       	cp	r31, r22
  ac:	72 31       	cpi	r23, 0x12	; 18
  ae:	bf 00       	.word	0x00bf	; ????
  b0:	00 00       	nop
  b2:	80 3f       	cpi	r24, 0xF0	; 240
  b4:	08 00       	.word	0x0008	; ????
  b6:	00 00       	nop
  b8:	be 92       	st	-X, r11
  ba:	24 49       	sbci	r18, 0x94	; 148
  bc:	12 3e       	cpi	r17, 0xE2	; 226
  be:	ab aa       	std	Y+51, r10	; 0x33
  c0:	aa 2a       	or	r10, r26
  c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
  c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
  c6:	4c 3e       	cpi	r20, 0xEC	; 236
  c8:	00 00       	nop
  ca:	00 80       	ld	r0, Z
  cc:	be ab       	std	Y+54, r27	; 0x36
  ce:	aa aa       	std	Y+50, r10	; 0x32
  d0:	aa 3e       	cpi	r26, 0xEA	; 234
  d2:	00 00       	nop
  d4:	00 00       	nop
  d6:	bf 00       	.word	0x00bf	; ????
  d8:	00 00       	nop
  da:	80 3f       	cpi	r24, 0xF0	; 240
  dc:	00 00       	nop
  de:	00 00       	nop
  e0:	00 08       	sbc	r0, r0
  e2:	41 78       	andi	r20, 0x81	; 129
  e4:	d3 bb       	out	0x13, r29	; 19
  e6:	43 87       	std	Z+11, r20	; 0x0b
  e8:	d1 13       	cpse	r29, r17
  ea:	3d 19       	sub	r19, r13
  ec:	0e 3c       	cpi	r16, 0xCE	; 206
  ee:	c3 bd       	out	0x23, r28	; 35
  f0:	42 82       	std	Z+2, r4	; 0x02
  f2:	ad 2b       	or	r26, r29
  f4:	3e 68       	ori	r19, 0x8E	; 142
  f6:	ec 82       	std	Y+4, r14	; 0x04
  f8:	76 be       	out	0x36, r7	; 54
  fa:	d9 8f       	std	Y+25, r29	; 0x19
  fc:	e1 a9       	ldd	r30, Z+49	; 0x31
  fe:	3e 4c       	sbci	r19, 0xCE	; 206
 100:	80 ef       	ldi	r24, 0xF0	; 240
 102:	ff be       	out	0x3f, r15	; 63
 104:	01 c4       	rjmp	.+2050   	; 0x908 <log+0x3c>
 106:	ff 7f       	andi	r31, 0xFF	; 255
 108:	3f 00       	.word	0x003f	; ????
 10a:	00 00       	nop
	...

0000010e <__ctors_end>:
 10e:	11 24       	eor	r1, r1
 110:	1f be       	out	0x3f, r1	; 63
 112:	cf ef       	ldi	r28, 0xFF	; 255
 114:	d0 e4       	ldi	r29, 0x40	; 64
 116:	de bf       	out	0x3e, r29	; 62
 118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
 11a:	11 e0       	ldi	r17, 0x01	; 1
 11c:	a0 e0       	ldi	r26, 0x00	; 0
 11e:	b1 e0       	ldi	r27, 0x01	; 1
 120:	e2 ed       	ldi	r30, 0xD2	; 210
 122:	f9 e0       	ldi	r31, 0x09	; 9
 124:	00 e0       	ldi	r16, 0x00	; 0
 126:	0b bf       	out	0x3b, r16	; 59
 128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x14>
 12a:	07 90       	elpm	r0, Z+
 12c:	0d 92       	st	X+, r0
 12e:	a2 30       	cpi	r26, 0x02	; 2
 130:	b1 07       	cpc	r27, r17
 132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0x10>

00000134 <__do_clear_bss>:
 134:	23 e0       	ldi	r18, 0x03	; 3
 136:	a2 e0       	ldi	r26, 0x02	; 2
 138:	b1 e0       	ldi	r27, 0x01	; 1
 13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
 13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
 13e:	a4 37       	cpi	r26, 0x74	; 116
 140:	b2 07       	cpc	r27, r18
 142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
 144:	02 d0       	rcall	.+4      	; 0x14a <main>
 146:	43 c4       	rjmp	.+2182   	; 0x9ce <_exit>

00000148 <__bad_interrupt>:
 148:	5b cf       	rjmp	.-330    	; 0x0 <__vectors>

0000014a <main>:
{ 
	
	uint8_t speed;
	speed=200;

	flag=0;
 14a:	10 92 04 01 	sts	0x0104, r1
 14e:	10 92 03 01 	sts	0x0103, r1
	
	USART_Init();
 152:	0b d1       	rcall	.+534    	; 0x36a <USART_Init>
	ADC_init();
 154:	26 d0       	rcall	.+76     	; 0x1a2 <ADC_init>
	PWM1_init();
 156:	17 d0       	rcall	.+46     	; 0x186 <PWM1_init>
	PWM2_init();
 158:	1d d0       	rcall	.+58     	; 0x194 <PWM2_init>
	timer3_init();
 15a:	9b d0       	rcall	.+310    	; 0x292 <timer3_init>
	encoders_init();
 15c:	4c d0       	rcall	.+152    	; 0x1f6 <encoders_init>
	sei(); //enable interrupts
 15e:	78 94       	sei
 160:	0f 2e       	mov	r0, r31
 162:	f7 e0       	ldi	r31, 0x07	; 7
 164:	ef 2e       	mov	r14, r31
 166:	f1 e0       	ldi	r31, 0x01	; 1
 168:	ff 2e       	mov	r15, r31
 16a:	f0 2d       	mov	r31, r0
 16c:	07 ea       	ldi	r16, 0xA7	; 167
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	e7 01       	movw	r28, r14
	{
		//total=0;
		

		for(int i=0;i<40;i++)
			v[i]=ADC_read(0);
 172:	80 e0       	ldi	r24, 0x00	; 0
 174:	1d d0       	rcall	.+58     	; 0x1b0 <ADC_read>
 176:	69 93       	st	Y+, r22
 178:	79 93       	st	Y+, r23
 17a:	89 93       	st	Y+, r24
 17c:	99 93       	st	Y+, r25
	while (1)  // main loop										
	{
		//total=0;
		

		for(int i=0;i<40;i++)
 17e:	c0 17       	cp	r28, r16
 180:	d1 07       	cpc	r29, r17
 182:	b9 f7       	brne	.-18     	; 0x172 <main+0x28>
 184:	f5 cf       	rjmp	.-22     	; 0x170 <main+0x26>

00000186 <PWM1_init>:


void PWM1_init()
{
	// initialize TCCR0 as per requirement, say as follows
	TCCR0A |= (1<<COM0A1)|(1<<WGM00);
 186:	84 b5       	in	r24, 0x24	; 36
 188:	81 68       	ori	r24, 0x81	; 129
 18a:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1<<CS01);
 18c:	82 e0       	ldi	r24, 0x02	; 2
 18e:	85 bd       	out	0x25, r24	; 37
	
	//PWM PIN
	DDRB|= (1<<PORTB3);
 190:	23 9a       	sbi	0x04, 3	; 4
 192:	08 95       	ret

00000194 <PWM2_init>:


void PWM2_init()
{
	// initialize TCCR1 as per requirement, say as follows
	TCCR0A |= (1<<COM0B1)|(1<<WGM02);
 194:	84 b5       	in	r24, 0x24	; 36
 196:	88 62       	ori	r24, 0x28	; 40
 198:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1<<CS01);
 19a:	82 e0       	ldi	r24, 0x02	; 2
 19c:	85 bd       	out	0x25, r24	; 37
	
	//PWM PIN
	DDRB|= (1<<PORTB4);
 19e:	24 9a       	sbi	0x04, 4	; 4
 1a0:	08 95       	ret

000001a2 <ADC_init>:
				     distance = (2914. / (data_sensor + 4.98)) -1;	//in cm formula
					 break;		 
		}
		flag=0;
		return distance; //ADC average in cm
}
 1a2:	09 98       	cbi	0x01, 1	; 1
 1a4:	ea e7       	ldi	r30, 0x7A	; 122
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	80 68       	ori	r24, 0x80	; 128
 1ac:	80 83       	st	Z, r24
 1ae:	08 95       	ret

000001b0 <ADC_read>:
 1b0:	ec e7       	ldi	r30, 0x7C	; 124
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	10 82       	st	Z, r1
 1b6:	90 81       	ld	r25, Z
 1b8:	87 70       	andi	r24, 0x07	; 7
 1ba:	98 2b       	or	r25, r24
 1bc:	90 83       	st	Z, r25
 1be:	ea e7       	ldi	r30, 0x7A	; 122
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	80 64       	ori	r24, 0x40	; 64
 1c6:	80 83       	st	Z, r24
 1c8:	80 81       	ld	r24, Z
 1ca:	86 fd       	sbrc	r24, 6
 1cc:	fd cf       	rjmp	.-6      	; 0x1c8 <ADC_read+0x18>
 1ce:	60 91 78 00 	lds	r22, 0x0078
 1d2:	70 91 79 00 	lds	r23, 0x0079
 1d6:	6f 5f       	subi	r22, 0xFF	; 255
 1d8:	7f 4f       	sbci	r23, 0xFF	; 255
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	a1 d1       	rcall	.+834    	; 0x522 <__floatunsisf>
 1e0:	2d ec       	ldi	r18, 0xCD	; 205
 1e2:	3c ec       	ldi	r19, 0xCC	; 204
 1e4:	4c e8       	ldi	r20, 0x8C	; 140
 1e6:	5f eb       	ldi	r21, 0xBF	; 191
 1e8:	8d d2       	rcall	.+1306   	; 0x704 <pow>
 1ea:	20 e0       	ldi	r18, 0x00	; 0
 1ec:	30 e0       	ldi	r19, 0x00	; 0
 1ee:	42 e8       	ldi	r20, 0x82	; 130
 1f0:	52 e4       	ldi	r21, 0x42	; 66
 1f2:	25 c2       	rjmp	.+1098   	; 0x63e <__mulsf3>
 1f4:	08 95       	ret

000001f6 <encoders_init>:


void encoders_init()
{
	/* set PD2, PD3 as input */
	DDRD &=~ (1 << PORTD2);
 1f6:	52 98       	cbi	0x0a, 2	; 10
	DDRD &=~(1 << PORTD3);/* PD2 and PD3 as input */
 1f8:	53 98       	cbi	0x0a, 3	; 10
	PORTD |= (1 << PORTD2)|(1<<PORTD3);   /* PD2 and PD3 pull-up enabled   */
 1fa:	8b b1       	in	r24, 0x0b	; 11
 1fc:	8c 60       	ori	r24, 0x0C	; 12
 1fe:	8b b9       	out	0x0b, r24	; 11
	
	EIMSK|=(1<<INT0)|(1<<INT1);	//We use external interrupt INT0 and INT1
 200:	8d b3       	in	r24, 0x1d	; 29
 202:	83 60       	ori	r24, 0x03	; 3
 204:	8d bb       	out	0x1d, r24	; 29
	EICRA|=(1<<ISC00)|(1<<ISC01)|(1<<ISC10)|(1<<ISC11);	//The rising edge of INT0 and INT1 generates asynchronously an interrupt request.
 206:	e9 e6       	ldi	r30, 0x69	; 105
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	80 81       	ld	r24, Z
 20c:	8f 60       	ori	r24, 0x0F	; 15
 20e:	80 83       	st	Z, r24
	
	grey_left=0;
 210:	10 92 06 01 	sts	0x0106, r1
	grey_right=0;
 214:	10 92 02 01 	sts	0x0102, r1
	rotations_right=0;
 218:	10 92 05 01 	sts	0x0105, r1
	rotations_left=0;
 21c:	10 92 ad 01 	sts	0x01AD, r1
 220:	08 95       	ret

00000222 <__vector_1>:
}



ISR(INT0_vect) //Right side interrupt
{
 222:	1f 92       	push	r1
 224:	0f 92       	push	r0
 226:	0f b6       	in	r0, 0x3f	; 63
 228:	0f 92       	push	r0
 22a:	11 24       	eor	r1, r1
 22c:	8f 93       	push	r24
	
		grey_right++;
 22e:	80 91 02 01 	lds	r24, 0x0102
 232:	8f 5f       	subi	r24, 0xFF	; 255
 234:	80 93 02 01 	sts	0x0102, r24
		if(grey_right>=10)
 238:	80 91 02 01 	lds	r24, 0x0102
 23c:	8a 30       	cpi	r24, 0x0A	; 10
 23e:	38 f0       	brcs	.+14     	; 0x24e <__vector_1+0x2c>
		{
			rotations_right++;
 240:	80 91 05 01 	lds	r24, 0x0105
 244:	8f 5f       	subi	r24, 0xFF	; 255
 246:	80 93 05 01 	sts	0x0105, r24
			grey_right=0;
 24a:	10 92 02 01 	sts	0x0102, r1
		}
	
}
 24e:	8f 91       	pop	r24
 250:	0f 90       	pop	r0
 252:	0f be       	out	0x3f, r0	; 63
 254:	0f 90       	pop	r0
 256:	1f 90       	pop	r1
 258:	18 95       	reti

0000025a <__vector_2>:


ISR(INT1_vect)  //Left side interrupt
{
 25a:	1f 92       	push	r1
 25c:	0f 92       	push	r0
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	0f 92       	push	r0
 262:	11 24       	eor	r1, r1
 264:	8f 93       	push	r24
	
	grey_left++;
 266:	80 91 06 01 	lds	r24, 0x0106
 26a:	8f 5f       	subi	r24, 0xFF	; 255
 26c:	80 93 06 01 	sts	0x0106, r24
	if(grey_left>=10)
 270:	80 91 06 01 	lds	r24, 0x0106
 274:	8a 30       	cpi	r24, 0x0A	; 10
 276:	38 f0       	brcs	.+14     	; 0x286 <__vector_2+0x2c>
	{
		rotations_left++;
 278:	80 91 ad 01 	lds	r24, 0x01AD
 27c:	8f 5f       	subi	r24, 0xFF	; 255
 27e:	80 93 ad 01 	sts	0x01AD, r24
		grey_left=0;
 282:	10 92 06 01 	sts	0x0106, r1
	}
	
}
 286:	8f 91       	pop	r24
 288:	0f 90       	pop	r0
 28a:	0f be       	out	0x3f, r0	; 63
 28c:	0f 90       	pop	r0
 28e:	1f 90       	pop	r1
 290:	18 95       	reti

00000292 <timer3_init>:


void timer3_init()
{
	// clear on compare match
	TCCR3A |= (1<<COM3A1);
 292:	e0 e9       	ldi	r30, 0x90	; 144
 294:	f0 e0       	ldi	r31, 0x00	; 0
 296:	80 81       	ld	r24, Z
 298:	80 68       	ori	r24, 0x80	; 128
 29a:	80 83       	st	Z, r24
	TCCR3B |= (1<<WGM32);
 29c:	e1 e9       	ldi	r30, 0x91	; 145
 29e:	f0 e0       	ldi	r31, 0x00	; 0
 2a0:	80 81       	ld	r24, Z
 2a2:	88 60       	ori	r24, 0x08	; 8
 2a4:	80 83       	st	Z, r24
	// set up timer with no prescaler count to 500
	TCCR3B |= (1 << CS30);
 2a6:	80 81       	ld	r24, Z
 2a8:	81 60       	ori	r24, 0x01	; 1
 2aa:	80 83       	st	Z, r24
	
	//set up compare value
	OCR3AH = 0x01;
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	80 93 99 00 	sts	0x0099, r24
	OCR3AL = 0xF4;
 2b2:	84 ef       	ldi	r24, 0xF4	; 244
 2b4:	80 93 98 00 	sts	0x0098, r24
	
	// initialize counter
	TCNT3H = 0;
 2b8:	10 92 95 00 	sts	0x0095, r1
	TCNT3L = 0;
 2bc:	10 92 94 00 	sts	0x0094, r1
	
	
	
	TIMSK3 |= (1<<OCIE3A) | (1<<TOIE3);
 2c0:	e1 e7       	ldi	r30, 0x71	; 113
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	80 81       	ld	r24, Z
 2c6:	83 60       	ori	r24, 0x03	; 3
 2c8:	80 83       	st	Z, r24
 2ca:	08 95       	ret

000002cc <__vector_32>:




ISR(TIMER3_COMPA_vect)
{
 2cc:	1f 92       	push	r1
 2ce:	0f 92       	push	r0
 2d0:	0f b6       	in	r0, 0x3f	; 63
 2d2:	0f 92       	push	r0
 2d4:	11 24       	eor	r1, r1
 2d6:	0b b6       	in	r0, 0x3b	; 59
 2d8:	0f 92       	push	r0
 2da:	2f 93       	push	r18
 2dc:	8f 93       	push	r24
 2de:	9f 93       	push	r25
 2e0:	ef 93       	push	r30
 2e2:	ff 93       	push	r31
	
	// initialize counter
	TCNT3H = 0;
 2e4:	10 92 95 00 	sts	0x0095, r1
	TCNT3L = 0;
 2e8:	10 92 94 00 	sts	0x0094, r1
	// keep a track of number of overflows
	ovfl++;
 2ec:	80 91 bf 01 	lds	r24, 0x01BF
 2f0:	90 91 c0 01 	lds	r25, 0x01C0
 2f4:	01 96       	adiw	r24, 0x01	; 1
 2f6:	90 93 c0 01 	sts	0x01C0, r25
 2fa:	80 93 bf 01 	sts	0x01BF, r24
	if(ovfl>=40)
 2fe:	80 91 bf 01 	lds	r24, 0x01BF
 302:	90 91 c0 01 	lds	r25, 0x01C0
 306:	88 97       	sbiw	r24, 0x28	; 40
 308:	20 f1       	brcs	.+72     	; 0x352 <__vector_32+0x86>
	{	s_time.ms++;
 30a:	e7 ea       	ldi	r30, 0xA7	; 167
 30c:	f1 e0       	ldi	r31, 0x01	; 1
 30e:	80 81       	ld	r24, Z
 310:	91 81       	ldd	r25, Z+1	; 0x01
 312:	01 96       	adiw	r24, 0x01	; 1
 314:	91 83       	std	Z+1, r25	; 0x01
 316:	80 83       	st	Z, r24
		if (s_time.ms>=1000)
 318:	88 3e       	cpi	r24, 0xE8	; 232
 31a:	93 40       	sbci	r25, 0x03	; 3
 31c:	b0 f0       	brcs	.+44     	; 0x34a <__vector_32+0x7e>
		{
			s_time.s++;
 31e:	82 81       	ldd	r24, Z+2	; 0x02
 320:	93 81       	ldd	r25, Z+3	; 0x03
 322:	01 96       	adiw	r24, 0x01	; 1
 324:	93 83       	std	Z+3, r25	; 0x03
 326:	82 83       	std	Z+2, r24	; 0x02
			s_time.ms=0;
 328:	11 82       	std	Z+1, r1	; 0x01
 32a:	10 82       	st	Z, r1
			if(s_time.s>=60)
 32c:	cc 97       	sbiw	r24, 0x3c	; 60
 32e:	68 f0       	brcs	.+26     	; 0x34a <__vector_32+0x7e>
			{
				s_time.m++;
 330:	84 81       	ldd	r24, Z+4	; 0x04
 332:	95 81       	ldd	r25, Z+5	; 0x05
 334:	01 96       	adiw	r24, 0x01	; 1
 336:	95 83       	std	Z+5, r25	; 0x05
 338:	84 83       	std	Z+4, r24	; 0x04
				s_time.s=0;
 33a:	13 82       	std	Z+3, r1	; 0x03
 33c:	12 82       	std	Z+2, r1	; 0x02
				
				if(s_time.m>=60)
 33e:	cc 97       	sbiw	r24, 0x3c	; 60
 340:	20 f0       	brcs	.+8      	; 0x34a <__vector_32+0x7e>
				s_time.m=0;
 342:	10 92 ac 01 	sts	0x01AC, r1
 346:	10 92 ab 01 	sts	0x01AB, r1
			}
			
		}
		ovfl=0;
 34a:	10 92 c0 01 	sts	0x01C0, r1
 34e:	10 92 bf 01 	sts	0x01BF, r1
	}
	
	//ADC_update_values();
	
 352:	ff 91       	pop	r31
 354:	ef 91       	pop	r30
 356:	9f 91       	pop	r25
 358:	8f 91       	pop	r24
 35a:	2f 91       	pop	r18
 35c:	0f 90       	pop	r0
 35e:	0b be       	out	0x3b, r0	; 59
 360:	0f 90       	pop	r0
 362:	0f be       	out	0x3f, r0	; 63
 364:	0f 90       	pop	r0
 366:	1f 90       	pop	r1
 368:	18 95       	reti

0000036a <USART_Init>:
unsigned int my_ubrr = MYUBRR;

void USART_Init()
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(my_ubrr>>8);
 36a:	80 91 01 01 	lds	r24, 0x0101
 36e:	80 93 c5 00 	sts	0x00C5, r24
	UBRR0L = (unsigned char)my_ubrr;
 372:	80 91 00 01 	lds	r24, 0x0100
 376:	80 93 c4 00 	sts	0x00C4, r24
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 37a:	88 e1       	ldi	r24, 0x18	; 24
 37c:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
 380:	8e e0       	ldi	r24, 0x0E	; 14
 382:	80 93 c2 00 	sts	0x00C2, r24
 386:	08 95       	ret

00000388 <__subsf3>:
 388:	50 58       	subi	r21, 0x80	; 128

0000038a <__addsf3>:
 38a:	bb 27       	eor	r27, r27
 38c:	aa 27       	eor	r26, r26
 38e:	0e d0       	rcall	.+28     	; 0x3ac <__addsf3x>
 390:	1c c1       	rjmp	.+568    	; 0x5ca <__fp_round>
 392:	0d d1       	rcall	.+538    	; 0x5ae <__fp_pscA>
 394:	30 f0       	brcs	.+12     	; 0x3a2 <__addsf3+0x18>
 396:	12 d1       	rcall	.+548    	; 0x5bc <__fp_pscB>
 398:	20 f0       	brcs	.+8      	; 0x3a2 <__addsf3+0x18>
 39a:	31 f4       	brne	.+12     	; 0x3a8 <__addsf3+0x1e>
 39c:	9f 3f       	cpi	r25, 0xFF	; 255
 39e:	11 f4       	brne	.+4      	; 0x3a4 <__addsf3+0x1a>
 3a0:	1e f4       	brtc	.+6      	; 0x3a8 <__addsf3+0x1e>
 3a2:	02 c1       	rjmp	.+516    	; 0x5a8 <__fp_nan>
 3a4:	0e f4       	brtc	.+2      	; 0x3a8 <__addsf3+0x1e>
 3a6:	e0 95       	com	r30
 3a8:	e7 fb       	bst	r30, 7
 3aa:	f8 c0       	rjmp	.+496    	; 0x59c <__fp_inf>

000003ac <__addsf3x>:
 3ac:	e9 2f       	mov	r30, r25
 3ae:	1e d1       	rcall	.+572    	; 0x5ec <__fp_split3>
 3b0:	80 f3       	brcs	.-32     	; 0x392 <__addsf3+0x8>
 3b2:	ba 17       	cp	r27, r26
 3b4:	62 07       	cpc	r22, r18
 3b6:	73 07       	cpc	r23, r19
 3b8:	84 07       	cpc	r24, r20
 3ba:	95 07       	cpc	r25, r21
 3bc:	18 f0       	brcs	.+6      	; 0x3c4 <__addsf3x+0x18>
 3be:	71 f4       	brne	.+28     	; 0x3dc <__addsf3x+0x30>
 3c0:	9e f5       	brtc	.+102    	; 0x428 <__addsf3x+0x7c>
 3c2:	36 c1       	rjmp	.+620    	; 0x630 <__fp_zero>
 3c4:	0e f4       	brtc	.+2      	; 0x3c8 <__addsf3x+0x1c>
 3c6:	e0 95       	com	r30
 3c8:	0b 2e       	mov	r0, r27
 3ca:	ba 2f       	mov	r27, r26
 3cc:	a0 2d       	mov	r26, r0
 3ce:	0b 01       	movw	r0, r22
 3d0:	b9 01       	movw	r22, r18
 3d2:	90 01       	movw	r18, r0
 3d4:	0c 01       	movw	r0, r24
 3d6:	ca 01       	movw	r24, r20
 3d8:	a0 01       	movw	r20, r0
 3da:	11 24       	eor	r1, r1
 3dc:	ff 27       	eor	r31, r31
 3de:	59 1b       	sub	r21, r25
 3e0:	99 f0       	breq	.+38     	; 0x408 <__addsf3x+0x5c>
 3e2:	59 3f       	cpi	r21, 0xF9	; 249
 3e4:	50 f4       	brcc	.+20     	; 0x3fa <__addsf3x+0x4e>
 3e6:	50 3e       	cpi	r21, 0xE0	; 224
 3e8:	68 f1       	brcs	.+90     	; 0x444 <__addsf3x+0x98>
 3ea:	1a 16       	cp	r1, r26
 3ec:	f0 40       	sbci	r31, 0x00	; 0
 3ee:	a2 2f       	mov	r26, r18
 3f0:	23 2f       	mov	r18, r19
 3f2:	34 2f       	mov	r19, r20
 3f4:	44 27       	eor	r20, r20
 3f6:	58 5f       	subi	r21, 0xF8	; 248
 3f8:	f3 cf       	rjmp	.-26     	; 0x3e0 <__addsf3x+0x34>
 3fa:	46 95       	lsr	r20
 3fc:	37 95       	ror	r19
 3fe:	27 95       	ror	r18
 400:	a7 95       	ror	r26
 402:	f0 40       	sbci	r31, 0x00	; 0
 404:	53 95       	inc	r21
 406:	c9 f7       	brne	.-14     	; 0x3fa <__addsf3x+0x4e>
 408:	7e f4       	brtc	.+30     	; 0x428 <__addsf3x+0x7c>
 40a:	1f 16       	cp	r1, r31
 40c:	ba 0b       	sbc	r27, r26
 40e:	62 0b       	sbc	r22, r18
 410:	73 0b       	sbc	r23, r19
 412:	84 0b       	sbc	r24, r20
 414:	ba f0       	brmi	.+46     	; 0x444 <__addsf3x+0x98>
 416:	91 50       	subi	r25, 0x01	; 1
 418:	a1 f0       	breq	.+40     	; 0x442 <__addsf3x+0x96>
 41a:	ff 0f       	add	r31, r31
 41c:	bb 1f       	adc	r27, r27
 41e:	66 1f       	adc	r22, r22
 420:	77 1f       	adc	r23, r23
 422:	88 1f       	adc	r24, r24
 424:	c2 f7       	brpl	.-16     	; 0x416 <__addsf3x+0x6a>
 426:	0e c0       	rjmp	.+28     	; 0x444 <__addsf3x+0x98>
 428:	ba 0f       	add	r27, r26
 42a:	62 1f       	adc	r22, r18
 42c:	73 1f       	adc	r23, r19
 42e:	84 1f       	adc	r24, r20
 430:	48 f4       	brcc	.+18     	; 0x444 <__addsf3x+0x98>
 432:	87 95       	ror	r24
 434:	77 95       	ror	r23
 436:	67 95       	ror	r22
 438:	b7 95       	ror	r27
 43a:	f7 95       	ror	r31
 43c:	9e 3f       	cpi	r25, 0xFE	; 254
 43e:	08 f0       	brcs	.+2      	; 0x442 <__addsf3x+0x96>
 440:	b3 cf       	rjmp	.-154    	; 0x3a8 <__addsf3+0x1e>
 442:	93 95       	inc	r25
 444:	88 0f       	add	r24, r24
 446:	08 f0       	brcs	.+2      	; 0x44a <__addsf3x+0x9e>
 448:	99 27       	eor	r25, r25
 44a:	ee 0f       	add	r30, r30
 44c:	97 95       	ror	r25
 44e:	87 95       	ror	r24
 450:	08 95       	ret

00000452 <__divsf3>:
 452:	0c d0       	rcall	.+24     	; 0x46c <__divsf3x>
 454:	ba c0       	rjmp	.+372    	; 0x5ca <__fp_round>
 456:	b2 d0       	rcall	.+356    	; 0x5bc <__fp_pscB>
 458:	40 f0       	brcs	.+16     	; 0x46a <__divsf3+0x18>
 45a:	a9 d0       	rcall	.+338    	; 0x5ae <__fp_pscA>
 45c:	30 f0       	brcs	.+12     	; 0x46a <__divsf3+0x18>
 45e:	21 f4       	brne	.+8      	; 0x468 <__divsf3+0x16>
 460:	5f 3f       	cpi	r21, 0xFF	; 255
 462:	19 f0       	breq	.+6      	; 0x46a <__divsf3+0x18>
 464:	9b c0       	rjmp	.+310    	; 0x59c <__fp_inf>
 466:	51 11       	cpse	r21, r1
 468:	e4 c0       	rjmp	.+456    	; 0x632 <__fp_szero>
 46a:	9e c0       	rjmp	.+316    	; 0x5a8 <__fp_nan>

0000046c <__divsf3x>:
 46c:	bf d0       	rcall	.+382    	; 0x5ec <__fp_split3>
 46e:	98 f3       	brcs	.-26     	; 0x456 <__divsf3+0x4>

00000470 <__divsf3_pse>:
 470:	99 23       	and	r25, r25
 472:	c9 f3       	breq	.-14     	; 0x466 <__divsf3+0x14>
 474:	55 23       	and	r21, r21
 476:	b1 f3       	breq	.-20     	; 0x464 <__divsf3+0x12>
 478:	95 1b       	sub	r25, r21
 47a:	55 0b       	sbc	r21, r21
 47c:	bb 27       	eor	r27, r27
 47e:	aa 27       	eor	r26, r26
 480:	62 17       	cp	r22, r18
 482:	73 07       	cpc	r23, r19
 484:	84 07       	cpc	r24, r20
 486:	38 f0       	brcs	.+14     	; 0x496 <__divsf3_pse+0x26>
 488:	9f 5f       	subi	r25, 0xFF	; 255
 48a:	5f 4f       	sbci	r21, 0xFF	; 255
 48c:	22 0f       	add	r18, r18
 48e:	33 1f       	adc	r19, r19
 490:	44 1f       	adc	r20, r20
 492:	aa 1f       	adc	r26, r26
 494:	a9 f3       	breq	.-22     	; 0x480 <__divsf3_pse+0x10>
 496:	33 d0       	rcall	.+102    	; 0x4fe <__divsf3_pse+0x8e>
 498:	0e 2e       	mov	r0, r30
 49a:	3a f0       	brmi	.+14     	; 0x4aa <__divsf3_pse+0x3a>
 49c:	e0 e8       	ldi	r30, 0x80	; 128
 49e:	30 d0       	rcall	.+96     	; 0x500 <__divsf3_pse+0x90>
 4a0:	91 50       	subi	r25, 0x01	; 1
 4a2:	50 40       	sbci	r21, 0x00	; 0
 4a4:	e6 95       	lsr	r30
 4a6:	00 1c       	adc	r0, r0
 4a8:	ca f7       	brpl	.-14     	; 0x49c <__divsf3_pse+0x2c>
 4aa:	29 d0       	rcall	.+82     	; 0x4fe <__divsf3_pse+0x8e>
 4ac:	fe 2f       	mov	r31, r30
 4ae:	27 d0       	rcall	.+78     	; 0x4fe <__divsf3_pse+0x8e>
 4b0:	66 0f       	add	r22, r22
 4b2:	77 1f       	adc	r23, r23
 4b4:	88 1f       	adc	r24, r24
 4b6:	bb 1f       	adc	r27, r27
 4b8:	26 17       	cp	r18, r22
 4ba:	37 07       	cpc	r19, r23
 4bc:	48 07       	cpc	r20, r24
 4be:	ab 07       	cpc	r26, r27
 4c0:	b0 e8       	ldi	r27, 0x80	; 128
 4c2:	09 f0       	breq	.+2      	; 0x4c6 <__divsf3_pse+0x56>
 4c4:	bb 0b       	sbc	r27, r27
 4c6:	80 2d       	mov	r24, r0
 4c8:	bf 01       	movw	r22, r30
 4ca:	ff 27       	eor	r31, r31
 4cc:	93 58       	subi	r25, 0x83	; 131
 4ce:	5f 4f       	sbci	r21, 0xFF	; 255
 4d0:	2a f0       	brmi	.+10     	; 0x4dc <__divsf3_pse+0x6c>
 4d2:	9e 3f       	cpi	r25, 0xFE	; 254
 4d4:	51 05       	cpc	r21, r1
 4d6:	68 f0       	brcs	.+26     	; 0x4f2 <__divsf3_pse+0x82>
 4d8:	61 c0       	rjmp	.+194    	; 0x59c <__fp_inf>
 4da:	ab c0       	rjmp	.+342    	; 0x632 <__fp_szero>
 4dc:	5f 3f       	cpi	r21, 0xFF	; 255
 4de:	ec f3       	brlt	.-6      	; 0x4da <__divsf3_pse+0x6a>
 4e0:	98 3e       	cpi	r25, 0xE8	; 232
 4e2:	dc f3       	brlt	.-10     	; 0x4da <__divsf3_pse+0x6a>
 4e4:	86 95       	lsr	r24
 4e6:	77 95       	ror	r23
 4e8:	67 95       	ror	r22
 4ea:	b7 95       	ror	r27
 4ec:	f7 95       	ror	r31
 4ee:	9f 5f       	subi	r25, 0xFF	; 255
 4f0:	c9 f7       	brne	.-14     	; 0x4e4 <__divsf3_pse+0x74>
 4f2:	88 0f       	add	r24, r24
 4f4:	91 1d       	adc	r25, r1
 4f6:	96 95       	lsr	r25
 4f8:	87 95       	ror	r24
 4fa:	97 f9       	bld	r25, 7
 4fc:	08 95       	ret
 4fe:	e1 e0       	ldi	r30, 0x01	; 1
 500:	66 0f       	add	r22, r22
 502:	77 1f       	adc	r23, r23
 504:	88 1f       	adc	r24, r24
 506:	bb 1f       	adc	r27, r27
 508:	62 17       	cp	r22, r18
 50a:	73 07       	cpc	r23, r19
 50c:	84 07       	cpc	r24, r20
 50e:	ba 07       	cpc	r27, r26
 510:	20 f0       	brcs	.+8      	; 0x51a <__divsf3_pse+0xaa>
 512:	62 1b       	sub	r22, r18
 514:	73 0b       	sbc	r23, r19
 516:	84 0b       	sbc	r24, r20
 518:	ba 0b       	sbc	r27, r26
 51a:	ee 1f       	adc	r30, r30
 51c:	88 f7       	brcc	.-30     	; 0x500 <__divsf3_pse+0x90>
 51e:	e0 95       	com	r30
 520:	08 95       	ret

00000522 <__floatunsisf>:
 522:	e8 94       	clt
 524:	09 c0       	rjmp	.+18     	; 0x538 <__floatsisf+0x12>

00000526 <__floatsisf>:
 526:	97 fb       	bst	r25, 7
 528:	3e f4       	brtc	.+14     	; 0x538 <__floatsisf+0x12>
 52a:	90 95       	com	r25
 52c:	80 95       	com	r24
 52e:	70 95       	com	r23
 530:	61 95       	neg	r22
 532:	7f 4f       	sbci	r23, 0xFF	; 255
 534:	8f 4f       	sbci	r24, 0xFF	; 255
 536:	9f 4f       	sbci	r25, 0xFF	; 255
 538:	99 23       	and	r25, r25
 53a:	a9 f0       	breq	.+42     	; 0x566 <__floatsisf+0x40>
 53c:	f9 2f       	mov	r31, r25
 53e:	96 e9       	ldi	r25, 0x96	; 150
 540:	bb 27       	eor	r27, r27
 542:	93 95       	inc	r25
 544:	f6 95       	lsr	r31
 546:	87 95       	ror	r24
 548:	77 95       	ror	r23
 54a:	67 95       	ror	r22
 54c:	b7 95       	ror	r27
 54e:	f1 11       	cpse	r31, r1
 550:	f8 cf       	rjmp	.-16     	; 0x542 <__floatsisf+0x1c>
 552:	fa f4       	brpl	.+62     	; 0x592 <__floatsisf+0x6c>
 554:	bb 0f       	add	r27, r27
 556:	11 f4       	brne	.+4      	; 0x55c <__floatsisf+0x36>
 558:	60 ff       	sbrs	r22, 0
 55a:	1b c0       	rjmp	.+54     	; 0x592 <__floatsisf+0x6c>
 55c:	6f 5f       	subi	r22, 0xFF	; 255
 55e:	7f 4f       	sbci	r23, 0xFF	; 255
 560:	8f 4f       	sbci	r24, 0xFF	; 255
 562:	9f 4f       	sbci	r25, 0xFF	; 255
 564:	16 c0       	rjmp	.+44     	; 0x592 <__floatsisf+0x6c>
 566:	88 23       	and	r24, r24
 568:	11 f0       	breq	.+4      	; 0x56e <__floatsisf+0x48>
 56a:	96 e9       	ldi	r25, 0x96	; 150
 56c:	11 c0       	rjmp	.+34     	; 0x590 <__floatsisf+0x6a>
 56e:	77 23       	and	r23, r23
 570:	21 f0       	breq	.+8      	; 0x57a <__floatsisf+0x54>
 572:	9e e8       	ldi	r25, 0x8E	; 142
 574:	87 2f       	mov	r24, r23
 576:	76 2f       	mov	r23, r22
 578:	05 c0       	rjmp	.+10     	; 0x584 <__floatsisf+0x5e>
 57a:	66 23       	and	r22, r22
 57c:	71 f0       	breq	.+28     	; 0x59a <__floatsisf+0x74>
 57e:	96 e8       	ldi	r25, 0x86	; 134
 580:	86 2f       	mov	r24, r22
 582:	70 e0       	ldi	r23, 0x00	; 0
 584:	60 e0       	ldi	r22, 0x00	; 0
 586:	2a f0       	brmi	.+10     	; 0x592 <__floatsisf+0x6c>
 588:	9a 95       	dec	r25
 58a:	66 0f       	add	r22, r22
 58c:	77 1f       	adc	r23, r23
 58e:	88 1f       	adc	r24, r24
 590:	da f7       	brpl	.-10     	; 0x588 <__floatsisf+0x62>
 592:	88 0f       	add	r24, r24
 594:	96 95       	lsr	r25
 596:	87 95       	ror	r24
 598:	97 f9       	bld	r25, 7
 59a:	08 95       	ret

0000059c <__fp_inf>:
 59c:	97 f9       	bld	r25, 7
 59e:	9f 67       	ori	r25, 0x7F	; 127
 5a0:	80 e8       	ldi	r24, 0x80	; 128
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	60 e0       	ldi	r22, 0x00	; 0
 5a6:	08 95       	ret

000005a8 <__fp_nan>:
 5a8:	9f ef       	ldi	r25, 0xFF	; 255
 5aa:	80 ec       	ldi	r24, 0xC0	; 192
 5ac:	08 95       	ret

000005ae <__fp_pscA>:
 5ae:	00 24       	eor	r0, r0
 5b0:	0a 94       	dec	r0
 5b2:	16 16       	cp	r1, r22
 5b4:	17 06       	cpc	r1, r23
 5b6:	18 06       	cpc	r1, r24
 5b8:	09 06       	cpc	r0, r25
 5ba:	08 95       	ret

000005bc <__fp_pscB>:
 5bc:	00 24       	eor	r0, r0
 5be:	0a 94       	dec	r0
 5c0:	12 16       	cp	r1, r18
 5c2:	13 06       	cpc	r1, r19
 5c4:	14 06       	cpc	r1, r20
 5c6:	05 06       	cpc	r0, r21
 5c8:	08 95       	ret

000005ca <__fp_round>:
 5ca:	09 2e       	mov	r0, r25
 5cc:	03 94       	inc	r0
 5ce:	00 0c       	add	r0, r0
 5d0:	11 f4       	brne	.+4      	; 0x5d6 <__fp_round+0xc>
 5d2:	88 23       	and	r24, r24
 5d4:	52 f0       	brmi	.+20     	; 0x5ea <__fp_round+0x20>
 5d6:	bb 0f       	add	r27, r27
 5d8:	40 f4       	brcc	.+16     	; 0x5ea <__fp_round+0x20>
 5da:	bf 2b       	or	r27, r31
 5dc:	11 f4       	brne	.+4      	; 0x5e2 <__fp_round+0x18>
 5de:	60 ff       	sbrs	r22, 0
 5e0:	04 c0       	rjmp	.+8      	; 0x5ea <__fp_round+0x20>
 5e2:	6f 5f       	subi	r22, 0xFF	; 255
 5e4:	7f 4f       	sbci	r23, 0xFF	; 255
 5e6:	8f 4f       	sbci	r24, 0xFF	; 255
 5e8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ea:	08 95       	ret

000005ec <__fp_split3>:
 5ec:	57 fd       	sbrc	r21, 7
 5ee:	90 58       	subi	r25, 0x80	; 128
 5f0:	44 0f       	add	r20, r20
 5f2:	55 1f       	adc	r21, r21
 5f4:	59 f0       	breq	.+22     	; 0x60c <__fp_splitA+0x10>
 5f6:	5f 3f       	cpi	r21, 0xFF	; 255
 5f8:	71 f0       	breq	.+28     	; 0x616 <__fp_splitA+0x1a>
 5fa:	47 95       	ror	r20

000005fc <__fp_splitA>:
 5fc:	88 0f       	add	r24, r24
 5fe:	97 fb       	bst	r25, 7
 600:	99 1f       	adc	r25, r25
 602:	61 f0       	breq	.+24     	; 0x61c <__fp_splitA+0x20>
 604:	9f 3f       	cpi	r25, 0xFF	; 255
 606:	79 f0       	breq	.+30     	; 0x626 <__fp_splitA+0x2a>
 608:	87 95       	ror	r24
 60a:	08 95       	ret
 60c:	12 16       	cp	r1, r18
 60e:	13 06       	cpc	r1, r19
 610:	14 06       	cpc	r1, r20
 612:	55 1f       	adc	r21, r21
 614:	f2 cf       	rjmp	.-28     	; 0x5fa <__fp_split3+0xe>
 616:	46 95       	lsr	r20
 618:	f1 df       	rcall	.-30     	; 0x5fc <__fp_splitA>
 61a:	08 c0       	rjmp	.+16     	; 0x62c <__fp_splitA+0x30>
 61c:	16 16       	cp	r1, r22
 61e:	17 06       	cpc	r1, r23
 620:	18 06       	cpc	r1, r24
 622:	99 1f       	adc	r25, r25
 624:	f1 cf       	rjmp	.-30     	; 0x608 <__fp_splitA+0xc>
 626:	86 95       	lsr	r24
 628:	71 05       	cpc	r23, r1
 62a:	61 05       	cpc	r22, r1
 62c:	08 94       	sec
 62e:	08 95       	ret

00000630 <__fp_zero>:
 630:	e8 94       	clt

00000632 <__fp_szero>:
 632:	bb 27       	eor	r27, r27
 634:	66 27       	eor	r22, r22
 636:	77 27       	eor	r23, r23
 638:	cb 01       	movw	r24, r22
 63a:	97 f9       	bld	r25, 7
 63c:	08 95       	ret

0000063e <__mulsf3>:
 63e:	0b d0       	rcall	.+22     	; 0x656 <__mulsf3x>
 640:	c4 cf       	rjmp	.-120    	; 0x5ca <__fp_round>
 642:	b5 df       	rcall	.-150    	; 0x5ae <__fp_pscA>
 644:	28 f0       	brcs	.+10     	; 0x650 <__mulsf3+0x12>
 646:	ba df       	rcall	.-140    	; 0x5bc <__fp_pscB>
 648:	18 f0       	brcs	.+6      	; 0x650 <__mulsf3+0x12>
 64a:	95 23       	and	r25, r21
 64c:	09 f0       	breq	.+2      	; 0x650 <__mulsf3+0x12>
 64e:	a6 cf       	rjmp	.-180    	; 0x59c <__fp_inf>
 650:	ab cf       	rjmp	.-170    	; 0x5a8 <__fp_nan>
 652:	11 24       	eor	r1, r1
 654:	ee cf       	rjmp	.-36     	; 0x632 <__fp_szero>

00000656 <__mulsf3x>:
 656:	ca df       	rcall	.-108    	; 0x5ec <__fp_split3>
 658:	a0 f3       	brcs	.-24     	; 0x642 <__mulsf3+0x4>

0000065a <__mulsf3_pse>:
 65a:	95 9f       	mul	r25, r21
 65c:	d1 f3       	breq	.-12     	; 0x652 <__mulsf3+0x14>
 65e:	95 0f       	add	r25, r21
 660:	50 e0       	ldi	r21, 0x00	; 0
 662:	55 1f       	adc	r21, r21
 664:	62 9f       	mul	r22, r18
 666:	f0 01       	movw	r30, r0
 668:	72 9f       	mul	r23, r18
 66a:	bb 27       	eor	r27, r27
 66c:	f0 0d       	add	r31, r0
 66e:	b1 1d       	adc	r27, r1
 670:	63 9f       	mul	r22, r19
 672:	aa 27       	eor	r26, r26
 674:	f0 0d       	add	r31, r0
 676:	b1 1d       	adc	r27, r1
 678:	aa 1f       	adc	r26, r26
 67a:	64 9f       	mul	r22, r20
 67c:	66 27       	eor	r22, r22
 67e:	b0 0d       	add	r27, r0
 680:	a1 1d       	adc	r26, r1
 682:	66 1f       	adc	r22, r22
 684:	82 9f       	mul	r24, r18
 686:	22 27       	eor	r18, r18
 688:	b0 0d       	add	r27, r0
 68a:	a1 1d       	adc	r26, r1
 68c:	62 1f       	adc	r22, r18
 68e:	73 9f       	mul	r23, r19
 690:	b0 0d       	add	r27, r0
 692:	a1 1d       	adc	r26, r1
 694:	62 1f       	adc	r22, r18
 696:	83 9f       	mul	r24, r19
 698:	a0 0d       	add	r26, r0
 69a:	61 1d       	adc	r22, r1
 69c:	22 1f       	adc	r18, r18
 69e:	74 9f       	mul	r23, r20
 6a0:	33 27       	eor	r19, r19
 6a2:	a0 0d       	add	r26, r0
 6a4:	61 1d       	adc	r22, r1
 6a6:	23 1f       	adc	r18, r19
 6a8:	84 9f       	mul	r24, r20
 6aa:	60 0d       	add	r22, r0
 6ac:	21 1d       	adc	r18, r1
 6ae:	82 2f       	mov	r24, r18
 6b0:	76 2f       	mov	r23, r22
 6b2:	6a 2f       	mov	r22, r26
 6b4:	11 24       	eor	r1, r1
 6b6:	9f 57       	subi	r25, 0x7F	; 127
 6b8:	50 40       	sbci	r21, 0x00	; 0
 6ba:	8a f0       	brmi	.+34     	; 0x6de <__mulsf3_pse+0x84>
 6bc:	e1 f0       	breq	.+56     	; 0x6f6 <__mulsf3_pse+0x9c>
 6be:	88 23       	and	r24, r24
 6c0:	4a f0       	brmi	.+18     	; 0x6d4 <__mulsf3_pse+0x7a>
 6c2:	ee 0f       	add	r30, r30
 6c4:	ff 1f       	adc	r31, r31
 6c6:	bb 1f       	adc	r27, r27
 6c8:	66 1f       	adc	r22, r22
 6ca:	77 1f       	adc	r23, r23
 6cc:	88 1f       	adc	r24, r24
 6ce:	91 50       	subi	r25, 0x01	; 1
 6d0:	50 40       	sbci	r21, 0x00	; 0
 6d2:	a9 f7       	brne	.-22     	; 0x6be <__mulsf3_pse+0x64>
 6d4:	9e 3f       	cpi	r25, 0xFE	; 254
 6d6:	51 05       	cpc	r21, r1
 6d8:	70 f0       	brcs	.+28     	; 0x6f6 <__mulsf3_pse+0x9c>
 6da:	60 cf       	rjmp	.-320    	; 0x59c <__fp_inf>
 6dc:	aa cf       	rjmp	.-172    	; 0x632 <__fp_szero>
 6de:	5f 3f       	cpi	r21, 0xFF	; 255
 6e0:	ec f3       	brlt	.-6      	; 0x6dc <__mulsf3_pse+0x82>
 6e2:	98 3e       	cpi	r25, 0xE8	; 232
 6e4:	dc f3       	brlt	.-10     	; 0x6dc <__mulsf3_pse+0x82>
 6e6:	86 95       	lsr	r24
 6e8:	77 95       	ror	r23
 6ea:	67 95       	ror	r22
 6ec:	b7 95       	ror	r27
 6ee:	f7 95       	ror	r31
 6f0:	e7 95       	ror	r30
 6f2:	9f 5f       	subi	r25, 0xFF	; 255
 6f4:	c1 f7       	brne	.-16     	; 0x6e6 <__mulsf3_pse+0x8c>
 6f6:	fe 2b       	or	r31, r30
 6f8:	88 0f       	add	r24, r24
 6fa:	91 1d       	adc	r25, r1
 6fc:	96 95       	lsr	r25
 6fe:	87 95       	ror	r24
 700:	97 f9       	bld	r25, 7
 702:	08 95       	ret

00000704 <pow>:
 704:	fa 01       	movw	r30, r20
 706:	ee 0f       	add	r30, r30
 708:	ff 1f       	adc	r31, r31
 70a:	30 96       	adiw	r30, 0x00	; 0
 70c:	21 05       	cpc	r18, r1
 70e:	31 05       	cpc	r19, r1
 710:	99 f1       	breq	.+102    	; 0x778 <pow+0x74>
 712:	61 15       	cp	r22, r1
 714:	71 05       	cpc	r23, r1
 716:	61 f4       	brne	.+24     	; 0x730 <pow+0x2c>
 718:	80 38       	cpi	r24, 0x80	; 128
 71a:	bf e3       	ldi	r27, 0x3F	; 63
 71c:	9b 07       	cpc	r25, r27
 71e:	49 f1       	breq	.+82     	; 0x772 <pow+0x6e>
 720:	68 94       	set
 722:	90 38       	cpi	r25, 0x80	; 128
 724:	81 05       	cpc	r24, r1
 726:	61 f0       	breq	.+24     	; 0x740 <pow+0x3c>
 728:	80 38       	cpi	r24, 0x80	; 128
 72a:	bf ef       	ldi	r27, 0xFF	; 255
 72c:	9b 07       	cpc	r25, r27
 72e:	41 f0       	breq	.+16     	; 0x740 <pow+0x3c>
 730:	99 23       	and	r25, r25
 732:	42 f5       	brpl	.+80     	; 0x784 <pow+0x80>
 734:	ff 3f       	cpi	r31, 0xFF	; 255
 736:	e1 05       	cpc	r30, r1
 738:	31 05       	cpc	r19, r1
 73a:	21 05       	cpc	r18, r1
 73c:	11 f1       	breq	.+68     	; 0x782 <pow+0x7e>
 73e:	e8 94       	clt
 740:	08 94       	sec
 742:	e7 95       	ror	r30
 744:	d9 01       	movw	r26, r18
 746:	aa 23       	and	r26, r26
 748:	29 f4       	brne	.+10     	; 0x754 <pow+0x50>
 74a:	ab 2f       	mov	r26, r27
 74c:	be 2f       	mov	r27, r30
 74e:	f8 5f       	subi	r31, 0xF8	; 248
 750:	d0 f3       	brcs	.-12     	; 0x746 <pow+0x42>
 752:	10 c0       	rjmp	.+32     	; 0x774 <pow+0x70>
 754:	ff 5f       	subi	r31, 0xFF	; 255
 756:	70 f4       	brcc	.+28     	; 0x774 <pow+0x70>
 758:	a6 95       	lsr	r26
 75a:	e0 f7       	brcc	.-8      	; 0x754 <pow+0x50>
 75c:	f7 39       	cpi	r31, 0x97	; 151
 75e:	50 f0       	brcs	.+20     	; 0x774 <pow+0x70>
 760:	19 f0       	breq	.+6      	; 0x768 <pow+0x64>
 762:	ff 3a       	cpi	r31, 0xAF	; 175
 764:	38 f4       	brcc	.+14     	; 0x774 <pow+0x70>
 766:	9f 77       	andi	r25, 0x7F	; 127
 768:	9f 93       	push	r25
 76a:	0c d0       	rcall	.+24     	; 0x784 <pow+0x80>
 76c:	0f 90       	pop	r0
 76e:	07 fc       	sbrc	r0, 7
 770:	90 58       	subi	r25, 0x80	; 128
 772:	08 95       	ret
 774:	3e f0       	brts	.+14     	; 0x784 <pow+0x80>
 776:	18 cf       	rjmp	.-464    	; 0x5a8 <__fp_nan>
 778:	60 e0       	ldi	r22, 0x00	; 0
 77a:	70 e0       	ldi	r23, 0x00	; 0
 77c:	80 e8       	ldi	r24, 0x80	; 128
 77e:	9f e3       	ldi	r25, 0x3F	; 63
 780:	08 95       	ret
 782:	4f e7       	ldi	r20, 0x7F	; 127
 784:	9f 77       	andi	r25, 0x7F	; 127
 786:	5f 93       	push	r21
 788:	4f 93       	push	r20
 78a:	3f 93       	push	r19
 78c:	2f 93       	push	r18
 78e:	9e d0       	rcall	.+316    	; 0x8cc <log>
 790:	2f 91       	pop	r18
 792:	3f 91       	pop	r19
 794:	4f 91       	pop	r20
 796:	5f 91       	pop	r21
 798:	52 df       	rcall	.-348    	; 0x63e <__mulsf3>
 79a:	05 c0       	rjmp	.+10     	; 0x7a6 <exp>
 79c:	19 f4       	brne	.+6      	; 0x7a4 <pow+0xa0>
 79e:	0e f0       	brts	.+2      	; 0x7a2 <pow+0x9e>
 7a0:	fd ce       	rjmp	.-518    	; 0x59c <__fp_inf>
 7a2:	46 cf       	rjmp	.-372    	; 0x630 <__fp_zero>
 7a4:	01 cf       	rjmp	.-510    	; 0x5a8 <__fp_nan>

000007a6 <exp>:
 7a6:	2a df       	rcall	.-428    	; 0x5fc <__fp_splitA>
 7a8:	c8 f3       	brcs	.-14     	; 0x79c <pow+0x98>
 7aa:	96 38       	cpi	r25, 0x86	; 134
 7ac:	c0 f7       	brcc	.-16     	; 0x79e <pow+0x9a>
 7ae:	07 f8       	bld	r0, 7
 7b0:	0f 92       	push	r0
 7b2:	e8 94       	clt
 7b4:	2b e3       	ldi	r18, 0x3B	; 59
 7b6:	3a ea       	ldi	r19, 0xAA	; 170
 7b8:	48 eb       	ldi	r20, 0xB8	; 184
 7ba:	5f e7       	ldi	r21, 0x7F	; 127
 7bc:	4e df       	rcall	.-356    	; 0x65a <__mulsf3_pse>
 7be:	0f 92       	push	r0
 7c0:	0f 92       	push	r0
 7c2:	0f 92       	push	r0
 7c4:	4d b7       	in	r20, 0x3d	; 61
 7c6:	5e b7       	in	r21, 0x3e	; 62
 7c8:	0f 92       	push	r0
 7ca:	c0 d0       	rcall	.+384    	; 0x94c <modf>
 7cc:	ec e8       	ldi	r30, 0x8C	; 140
 7ce:	f0 e0       	ldi	r31, 0x00	; 0
 7d0:	16 d0       	rcall	.+44     	; 0x7fe <__fp_powser>
 7d2:	4f 91       	pop	r20
 7d4:	5f 91       	pop	r21
 7d6:	ef 91       	pop	r30
 7d8:	ff 91       	pop	r31
 7da:	e5 95       	asr	r30
 7dc:	ee 1f       	adc	r30, r30
 7de:	ff 1f       	adc	r31, r31
 7e0:	49 f0       	breq	.+18     	; 0x7f4 <exp+0x4e>
 7e2:	fe 57       	subi	r31, 0x7E	; 126
 7e4:	e0 68       	ori	r30, 0x80	; 128
 7e6:	44 27       	eor	r20, r20
 7e8:	ee 0f       	add	r30, r30
 7ea:	44 1f       	adc	r20, r20
 7ec:	fa 95       	dec	r31
 7ee:	e1 f7       	brne	.-8      	; 0x7e8 <exp+0x42>
 7f0:	41 95       	neg	r20
 7f2:	55 0b       	sbc	r21, r21
 7f4:	32 d0       	rcall	.+100    	; 0x85a <ldexp>
 7f6:	0f 90       	pop	r0
 7f8:	07 fe       	sbrs	r0, 7
 7fa:	26 c0       	rjmp	.+76     	; 0x848 <inverse>
 7fc:	08 95       	ret

000007fe <__fp_powser>:
 7fe:	df 93       	push	r29
 800:	cf 93       	push	r28
 802:	1f 93       	push	r17
 804:	0f 93       	push	r16
 806:	ff 92       	push	r15
 808:	ef 92       	push	r14
 80a:	df 92       	push	r13
 80c:	7b 01       	movw	r14, r22
 80e:	8c 01       	movw	r16, r24
 810:	68 94       	set
 812:	05 c0       	rjmp	.+10     	; 0x81e <__fp_powser+0x20>
 814:	da 2e       	mov	r13, r26
 816:	ef 01       	movw	r28, r30
 818:	1e df       	rcall	.-452    	; 0x656 <__mulsf3x>
 81a:	fe 01       	movw	r30, r28
 81c:	e8 94       	clt
 81e:	a5 91       	lpm	r26, Z+
 820:	25 91       	lpm	r18, Z+
 822:	35 91       	lpm	r19, Z+
 824:	45 91       	lpm	r20, Z+
 826:	55 91       	lpm	r21, Z+
 828:	ae f3       	brts	.-22     	; 0x814 <__fp_powser+0x16>
 82a:	ef 01       	movw	r28, r30
 82c:	bf dd       	rcall	.-1154   	; 0x3ac <__addsf3x>
 82e:	fe 01       	movw	r30, r28
 830:	97 01       	movw	r18, r14
 832:	a8 01       	movw	r20, r16
 834:	da 94       	dec	r13
 836:	79 f7       	brne	.-34     	; 0x816 <__fp_powser+0x18>
 838:	df 90       	pop	r13
 83a:	ef 90       	pop	r14
 83c:	ff 90       	pop	r15
 83e:	0f 91       	pop	r16
 840:	1f 91       	pop	r17
 842:	cf 91       	pop	r28
 844:	df 91       	pop	r29
 846:	08 95       	ret

00000848 <inverse>:
 848:	9b 01       	movw	r18, r22
 84a:	ac 01       	movw	r20, r24
 84c:	60 e0       	ldi	r22, 0x00	; 0
 84e:	70 e0       	ldi	r23, 0x00	; 0
 850:	80 e8       	ldi	r24, 0x80	; 128
 852:	9f e3       	ldi	r25, 0x3F	; 63
 854:	fe cd       	rjmp	.-1028   	; 0x452 <__divsf3>
 856:	a2 ce       	rjmp	.-700    	; 0x59c <__fp_inf>
 858:	ac c0       	rjmp	.+344    	; 0x9b2 <__fp_mpack>

0000085a <ldexp>:
 85a:	d0 de       	rcall	.-608    	; 0x5fc <__fp_splitA>
 85c:	e8 f3       	brcs	.-6      	; 0x858 <inverse+0x10>
 85e:	99 23       	and	r25, r25
 860:	d9 f3       	breq	.-10     	; 0x858 <inverse+0x10>
 862:	94 0f       	add	r25, r20
 864:	51 1d       	adc	r21, r1
 866:	bb f3       	brvs	.-18     	; 0x856 <inverse+0xe>
 868:	91 50       	subi	r25, 0x01	; 1
 86a:	50 40       	sbci	r21, 0x00	; 0
 86c:	94 f0       	brlt	.+36     	; 0x892 <ldexp+0x38>
 86e:	59 f0       	breq	.+22     	; 0x886 <ldexp+0x2c>
 870:	88 23       	and	r24, r24
 872:	32 f0       	brmi	.+12     	; 0x880 <ldexp+0x26>
 874:	66 0f       	add	r22, r22
 876:	77 1f       	adc	r23, r23
 878:	88 1f       	adc	r24, r24
 87a:	91 50       	subi	r25, 0x01	; 1
 87c:	50 40       	sbci	r21, 0x00	; 0
 87e:	c1 f7       	brne	.-16     	; 0x870 <ldexp+0x16>
 880:	9e 3f       	cpi	r25, 0xFE	; 254
 882:	51 05       	cpc	r21, r1
 884:	44 f7       	brge	.-48     	; 0x856 <inverse+0xe>
 886:	88 0f       	add	r24, r24
 888:	91 1d       	adc	r25, r1
 88a:	96 95       	lsr	r25
 88c:	87 95       	ror	r24
 88e:	97 f9       	bld	r25, 7
 890:	08 95       	ret
 892:	5f 3f       	cpi	r21, 0xFF	; 255
 894:	ac f0       	brlt	.+42     	; 0x8c0 <ldexp+0x66>
 896:	98 3e       	cpi	r25, 0xE8	; 232
 898:	9c f0       	brlt	.+38     	; 0x8c0 <ldexp+0x66>
 89a:	bb 27       	eor	r27, r27
 89c:	86 95       	lsr	r24
 89e:	77 95       	ror	r23
 8a0:	67 95       	ror	r22
 8a2:	b7 95       	ror	r27
 8a4:	08 f4       	brcc	.+2      	; 0x8a8 <ldexp+0x4e>
 8a6:	b1 60       	ori	r27, 0x01	; 1
 8a8:	93 95       	inc	r25
 8aa:	c1 f7       	brne	.-16     	; 0x89c <ldexp+0x42>
 8ac:	bb 0f       	add	r27, r27
 8ae:	58 f7       	brcc	.-42     	; 0x886 <ldexp+0x2c>
 8b0:	11 f4       	brne	.+4      	; 0x8b6 <ldexp+0x5c>
 8b2:	60 ff       	sbrs	r22, 0
 8b4:	e8 cf       	rjmp	.-48     	; 0x886 <ldexp+0x2c>
 8b6:	6f 5f       	subi	r22, 0xFF	; 255
 8b8:	7f 4f       	sbci	r23, 0xFF	; 255
 8ba:	8f 4f       	sbci	r24, 0xFF	; 255
 8bc:	9f 4f       	sbci	r25, 0xFF	; 255
 8be:	e3 cf       	rjmp	.-58     	; 0x886 <ldexp+0x2c>
 8c0:	b8 ce       	rjmp	.-656    	; 0x632 <__fp_szero>
 8c2:	0e f0       	brts	.+2      	; 0x8c6 <ldexp+0x6c>
 8c4:	76 c0       	rjmp	.+236    	; 0x9b2 <__fp_mpack>
 8c6:	70 ce       	rjmp	.-800    	; 0x5a8 <__fp_nan>
 8c8:	68 94       	set
 8ca:	68 ce       	rjmp	.-816    	; 0x59c <__fp_inf>

000008cc <log>:
 8cc:	97 de       	rcall	.-722    	; 0x5fc <__fp_splitA>
 8ce:	c8 f3       	brcs	.-14     	; 0x8c2 <ldexp+0x68>
 8d0:	99 23       	and	r25, r25
 8d2:	d1 f3       	breq	.-12     	; 0x8c8 <ldexp+0x6e>
 8d4:	c6 f3       	brts	.-16     	; 0x8c6 <ldexp+0x6c>
 8d6:	df 93       	push	r29
 8d8:	cf 93       	push	r28
 8da:	1f 93       	push	r17
 8dc:	0f 93       	push	r16
 8de:	ff 92       	push	r15
 8e0:	c9 2f       	mov	r28, r25
 8e2:	dd 27       	eor	r29, r29
 8e4:	88 23       	and	r24, r24
 8e6:	2a f0       	brmi	.+10     	; 0x8f2 <log+0x26>
 8e8:	21 97       	sbiw	r28, 0x01	; 1
 8ea:	66 0f       	add	r22, r22
 8ec:	77 1f       	adc	r23, r23
 8ee:	88 1f       	adc	r24, r24
 8f0:	da f7       	brpl	.-10     	; 0x8e8 <log+0x1c>
 8f2:	20 e0       	ldi	r18, 0x00	; 0
 8f4:	30 e0       	ldi	r19, 0x00	; 0
 8f6:	40 e8       	ldi	r20, 0x80	; 128
 8f8:	5f eb       	ldi	r21, 0xBF	; 191
 8fa:	9f e3       	ldi	r25, 0x3F	; 63
 8fc:	88 39       	cpi	r24, 0x98	; 152
 8fe:	20 f0       	brcs	.+8      	; 0x908 <log+0x3c>
 900:	80 3e       	cpi	r24, 0xE0	; 224
 902:	30 f0       	brcs	.+12     	; 0x910 <log+0x44>
 904:	21 96       	adiw	r28, 0x01	; 1
 906:	8f 77       	andi	r24, 0x7F	; 127
 908:	40 dd       	rcall	.-1408   	; 0x38a <__addsf3>
 90a:	e4 eb       	ldi	r30, 0xB4	; 180
 90c:	f0 e0       	ldi	r31, 0x00	; 0
 90e:	03 c0       	rjmp	.+6      	; 0x916 <log+0x4a>
 910:	3c dd       	rcall	.-1416   	; 0x38a <__addsf3>
 912:	e1 ee       	ldi	r30, 0xE1	; 225
 914:	f0 e0       	ldi	r31, 0x00	; 0
 916:	73 df       	rcall	.-282    	; 0x7fe <__fp_powser>
 918:	8b 01       	movw	r16, r22
 91a:	be 01       	movw	r22, r28
 91c:	ec 01       	movw	r28, r24
 91e:	fb 2e       	mov	r15, r27
 920:	6f 57       	subi	r22, 0x7F	; 127
 922:	71 09       	sbc	r23, r1
 924:	75 95       	asr	r23
 926:	77 1f       	adc	r23, r23
 928:	88 0b       	sbc	r24, r24
 92a:	99 0b       	sbc	r25, r25
 92c:	fc dd       	rcall	.-1032   	; 0x526 <__floatsisf>
 92e:	28 e1       	ldi	r18, 0x18	; 24
 930:	32 e7       	ldi	r19, 0x72	; 114
 932:	41 e3       	ldi	r20, 0x31	; 49
 934:	5f e3       	ldi	r21, 0x3F	; 63
 936:	8f de       	rcall	.-738    	; 0x656 <__mulsf3x>
 938:	af 2d       	mov	r26, r15
 93a:	98 01       	movw	r18, r16
 93c:	ae 01       	movw	r20, r28
 93e:	ff 90       	pop	r15
 940:	0f 91       	pop	r16
 942:	1f 91       	pop	r17
 944:	cf 91       	pop	r28
 946:	df 91       	pop	r29
 948:	31 dd       	rcall	.-1438   	; 0x3ac <__addsf3x>
 94a:	3f ce       	rjmp	.-898    	; 0x5ca <__fp_round>

0000094c <modf>:
 94c:	fa 01       	movw	r30, r20
 94e:	dc 01       	movw	r26, r24
 950:	aa 0f       	add	r26, r26
 952:	bb 1f       	adc	r27, r27
 954:	9b 01       	movw	r18, r22
 956:	ac 01       	movw	r20, r24
 958:	bf 57       	subi	r27, 0x7F	; 127
 95a:	28 f4       	brcc	.+10     	; 0x966 <modf+0x1a>
 95c:	22 27       	eor	r18, r18
 95e:	33 27       	eor	r19, r19
 960:	44 27       	eor	r20, r20
 962:	50 78       	andi	r21, 0x80	; 128
 964:	1f c0       	rjmp	.+62     	; 0x9a4 <modf+0x58>
 966:	b7 51       	subi	r27, 0x17	; 23
 968:	88 f4       	brcc	.+34     	; 0x98c <modf+0x40>
 96a:	ab 2f       	mov	r26, r27
 96c:	00 24       	eor	r0, r0
 96e:	46 95       	lsr	r20
 970:	37 95       	ror	r19
 972:	27 95       	ror	r18
 974:	01 1c       	adc	r0, r1
 976:	a3 95       	inc	r26
 978:	d2 f3       	brmi	.-12     	; 0x96e <modf+0x22>
 97a:	00 20       	and	r0, r0
 97c:	69 f0       	breq	.+26     	; 0x998 <modf+0x4c>
 97e:	22 0f       	add	r18, r18
 980:	33 1f       	adc	r19, r19
 982:	44 1f       	adc	r20, r20
 984:	b3 95       	inc	r27
 986:	da f3       	brmi	.-10     	; 0x97e <modf+0x32>
 988:	0d d0       	rcall	.+26     	; 0x9a4 <modf+0x58>
 98a:	fe cc       	rjmp	.-1540   	; 0x388 <__subsf3>
 98c:	61 30       	cpi	r22, 0x01	; 1
 98e:	71 05       	cpc	r23, r1
 990:	a0 e8       	ldi	r26, 0x80	; 128
 992:	8a 07       	cpc	r24, r26
 994:	b9 46       	sbci	r27, 0x69	; 105
 996:	30 f4       	brcc	.+12     	; 0x9a4 <modf+0x58>
 998:	9b 01       	movw	r18, r22
 99a:	ac 01       	movw	r20, r24
 99c:	66 27       	eor	r22, r22
 99e:	77 27       	eor	r23, r23
 9a0:	88 27       	eor	r24, r24
 9a2:	90 78       	andi	r25, 0x80	; 128
 9a4:	30 96       	adiw	r30, 0x00	; 0
 9a6:	21 f0       	breq	.+8      	; 0x9b0 <modf+0x64>
 9a8:	20 83       	st	Z, r18
 9aa:	31 83       	std	Z+1, r19	; 0x01
 9ac:	42 83       	std	Z+2, r20	; 0x02
 9ae:	53 83       	std	Z+3, r21	; 0x03
 9b0:	08 95       	ret

000009b2 <__fp_mpack>:
 9b2:	9f 3f       	cpi	r25, 0xFF	; 255
 9b4:	31 f0       	breq	.+12     	; 0x9c2 <__fp_mpack_finite+0xc>

000009b6 <__fp_mpack_finite>:
 9b6:	91 50       	subi	r25, 0x01	; 1
 9b8:	20 f4       	brcc	.+8      	; 0x9c2 <__fp_mpack_finite+0xc>
 9ba:	87 95       	ror	r24
 9bc:	77 95       	ror	r23
 9be:	67 95       	ror	r22
 9c0:	b7 95       	ror	r27
 9c2:	88 0f       	add	r24, r24
 9c4:	91 1d       	adc	r25, r1
 9c6:	96 95       	lsr	r25
 9c8:	87 95       	ror	r24
 9ca:	97 f9       	bld	r25, 7
 9cc:	08 95       	ret

000009ce <_exit>:
 9ce:	f8 94       	cli

000009d0 <__stop_program>:
 9d0:	ff cf       	rjmp	.-2      	; 0x9d0 <__stop_program>
